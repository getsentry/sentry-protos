syntax = "proto3";

package sentry_protos.snuba.v1;

import "google/protobuf/timestamp.proto";
import "sentry_protos/snuba/v1/request_common.proto";
import "sentry_protos/snuba/v1/trace_item_attribute.proto";

// GetTraceRequest lets you query a trace by trace_id, returning all its items.
//
// Each item will return every attributes by default or you can pass a list of
// attributes to return for each item type.
message GetTraceRequest {
  message TraceItem {
    //DEPRECATED: use item_type instead
    TraceItemName type = 1 [deprecated = true];
    // If attributes is empty, all attributes will be returned for this type.
    repeated AttributeKey attributes = 2;
    TraceItemType item_type = 3;
  }

  RequestMeta meta = 1;
  string trace_id = 2;

  // A list of items and their attributes to return in the response.
  repeated TraceItem items = 3;

  // Optional page token for pagination. If provided, returns the next page of results.
  PageToken page_token = 4;

  // Optional limit on the number of items to return per page. If not specified,
  // a default limit will be applied by the server.
  uint32 limit = 5;
}

// GetTraceResponse returns a trace and all its items.
message GetTraceResponse {
  message Item {
    message Attribute {
      AttributeKey key = 1;
      AttributeValue value = 2;
    }

    string id = 1;
    google.protobuf.Timestamp timestamp = 2;
    repeated Attribute attributes = 3;
  }

  // ItemGroup is a list of items of a specific type.
  message ItemGroup {
    //DEPRECATED: use item_type instead
    TraceItemName type = 1 [deprecated = true];
    repeated Item items = 2;
    TraceItemType item_type = 3;
  }

  string trace_id = 1;
  ResponseMeta meta = 2;

  repeated ItemGroup item_groups = 3;

  // Page token for the next page of results.
  PageToken page_token = 4;
}
