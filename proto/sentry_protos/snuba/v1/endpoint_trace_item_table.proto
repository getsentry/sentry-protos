syntax = "proto3";

package sentry_protos.snuba.v1;

import "sentry_protos/snuba/v1/request_common.proto";
import "sentry_protos/snuba/v1/trace_item_attribute.proto";
import "sentry_protos/snuba/v1/trace_item_filter.proto";

// This is a request to the TraceItemTable endpoint,
// it is used to query for TraceItems (ex. spans)
// it returns tabular data where each row is a TraceItem,
// and the columns are the attributes of the TraceItem
// it can also be used for aggregations
message TraceItemTableRequest {
  message OrderBy {
    Column column = 1;
    bool descending = 2;
  }

  RequestMeta meta = 1;

  // the columns or aggregations you want to get
  repeated Column columns = 2;

  // filter out trace items you dont want
  TraceItemFilter filter = 3;

  repeated OrderBy order_by = 4;

  repeated AttributeKey group_by = 5;

  uint32 limit = 6;

  // optional, used for pagination, the next page token will be returned in the response
  PageToken page_token = 7;

  repeated VirtualColumnContext virtual_column_contexts = 8;

  // optional, filter out results of aggregates, same as SQL HAVING
  AggregationFilter aggregation_filter = 9;
}

message AggregationAndFilter {
  repeated AggregationFilter filters = 1;
}

message AggregationOrFilter {
  repeated AggregationFilter filters = 1;
}

message AggregationComparisonFilter {
  enum Op {
    OP_UNSPECIFIED = 0;
    OP_LESS_THAN = 1;
    OP_GREATER_THAN = 2;
    OP_LESS_THAN_OR_EQUALS = 3;
    OP_GREATER_THAN_OR_EQUALS = 4;
    OP_EQUALS = 5;
    OP_NOT_EQUALS = 6;
  }
  Column column = 1 [deprecated = true]; // deprecated as columns should always be aggregated in a post aggregation filter
  Op op = 2;
  AttributeValue value = 3 [deprecated = true]; // since only aggregated columns are supported, the value should be numeric
  AttributeAggregation aggregation = 4;
  double val = 5;
}

message AggregationFilter {
  oneof value {
    AggregationAndFilter and_filter = 1;
    AggregationOrFilter or_filter = 2;
    AggregationComparisonFilter comparison_filter = 3;
  }
}

message Column {
  oneof column {
    AttributeKey key = 1;
    AttributeAggregation aggregation = 2;
  }
  string label = 3;
}

message TraceItemColumnValues {
  string attribute_name = 1;

  repeated AttributeValue results = 2;

  // reliability of the values based on confidence interval and sample size math
  repeated Reliability reliabilities = 3;
}

// this is a response from the TraceItemTable endpoint
// it is the counterpart to TraceItemTableRequest
message TraceItemTableResponse {
  // the rows
  repeated TraceItemColumnValues column_values = 1;

  // page token for the next page of results
  PageToken page_token = 2;

  ResponseMeta meta = 3;
}
